# Project Structure & Architecture
- The project is an API Service for NIYA CRM using .NET 9.0
- Backend connects to Database and Redis Cache
- Backend services are split into different projects
- Core project include the Domain Models,  Entities, Value Objects, , Specifications, Interfaces, DTOs, Constants, etc.
- All common functionalities are under Common folder in Core Project and other features are directly added into their respective folder.
- Infrastructure project contains database, redis connection, logging, Email Services, and other external services.
- Data folder for database access related code
- Use EF Core and using PostgreSQL Database 
- Application project contains business logic
- API project contains API endpoints using Contollers
- Validators folder in API project contains validation logic using FluentValidation
- Usually, API Endpoints call the Services layer and Services layer calls the Infrastructure layer. And all corresponding interfaces & Entities are in Core project.
- Add XML comments in all interfaces classes and methods. Use inheritdoc to inherit comments from base classes and interfaces in the concrete implementation.
- All Configuration are in Configurations folder under NiyaCRM.Api project with specific json files for different modules.
- Use MultiTenancy for different clients.
- Use Redis for caching.
- Use Extension method instead of direct implementation in program.cs


